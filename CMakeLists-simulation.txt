cmake_minimum_required(VERSION 3.20)

# Simulation build configuration for host platform
project(TrellisSimulation
    VERSION 1.0.0
    LANGUAGES C CXX
)

# C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_C_STANDARD 11)

# Compiler flags for debugging
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -g")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -g")

# Find ncurses
find_package(PkgConfig REQUIRED)
pkg_check_modules(NCURSES REQUIRED ncurses)

# Include directories
include_directories(
    ${CMAKE_SOURCE_DIR}/../include/core
    ${CMAKE_SOURCE_DIR}/../include/simulation
)

# Core business logic sources (platform-agnostic)
set(CORE_SOURCES
    ${CMAKE_SOURCE_DIR}/../src/core/StepSequencer.cpp
)

# Simulation sources
set(SIMULATION_SOURCES
    ${CMAKE_SOURCE_DIR}/../src/simulation/CursesDisplay.cpp
    ${CMAKE_SOURCE_DIR}/../src/simulation/CursesInput.cpp
    ${CMAKE_SOURCE_DIR}/../src/simulation/main.cpp
)

# Create simulation executable
add_executable(trellis_simulation ${SIMULATION_SOURCES} ${CORE_SOURCES})

# Link with ncurses
target_link_libraries(trellis_simulation ${NCURSES_LIBRARIES})
target_include_directories(trellis_simulation PRIVATE ${NCURSES_INCLUDE_DIRS})
target_compile_options(trellis_simulation PRIVATE ${NCURSES_CFLAGS_OTHER})

# Install target
install(TARGETS trellis_simulation DESTINATION bin)